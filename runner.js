const readline = require("readline");
const getQQ = require("./Questions");

const reader = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});
const thems = [
  {
    them: "–ú–æ–ø—Å—ã",
  },
  {
    them: "–ö–∞–ø–∏–±–∞—Ä—ã",
  },
  {
    them: "–ü—Ä–æ—Å—Ç–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
  },
];

for (let i = 0; i < thems.length; i++) {
  console.log(`${1 + i}.`, thems[i].them);
}

reader.question("–í—ã–±–µ—Ä–∏ —Ç–µ–º—É - ", function (input) {
  if (Number(input) <= thems.length && typeof Number(input) === "number") {
    console.log("\n");
    askQuestion(input);
  } else {
    console.log("\x1b[41m", "–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π —Ç–µ–º—ã ");
    reader.close();
  }
});

let score = 0;
let currentQuestion = 0;
function askQuestion(theme) {
  let questions = getQQ(theme);
  reader.question(
    questions[currentQuestion].question +
      "\n" +
      `(–í–æ–ø—Ä–æ—Å –∑–∞ ${questions[currentQuestion].score})` +
      "\n",
    (userAnswer) => {
      if (
        userAnswer.toLowerCase() ===
        questions[currentQuestion].answer.toLowerCase()
      ) {
        score += questions[currentQuestion].score;
        console.log(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ!üòâ –í–∞—à —Å—á—ë—Ç ${score}\n`);
      } else {
        console.log(
          `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!ü§¨ –í–∞—à —Å—á—ë—Ç ${score}\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${questions[currentQuestion].answer}\n`
        );
      }
      currentQuestion++;
      if (currentQuestion === questions.length) {
        console.log(
          "\x1b[42m",
          `–í–∞—à —Å—á–µ—Ç: ${score}/${
            (questions.length / 2) * (1 + questions.length) * 100
          } `
        );
        reader.close();
      } else {
        askQuestion(theme);
      }
    }
  );
}
